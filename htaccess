To deploy your Laravel 11 and Vue 3 application with Vue Router on a Red Hat Linux server using Apache, follow these steps:

1. Set Up the Server and Install Required Software
Ensure your Red Hat Linux server is up-to-date and has Apache, PHP, and Composer installed.

Update Packages:

bash
Copy code
sudo yum update -y
Install Apache:

bash
Copy code
sudo yum install httpd -y
Install PHP and Extensions (Adjust the PHP version based on Laravel’s requirements):

bash
Copy code
sudo yum install php php-cli php-common php-mbstring php-xml php-mysqlnd php-zip php-json php-curl -y
Install Composer:

bash
Copy code
curl -sS https://getcomposer.org/installer | php
sudo mv composer.phar /usr/local/bin/composer
2. Set Up the Application Files
Upload your Laravel and Vue project files to the server, typically in /var/www/html/yourapp.

Clone or Upload the Application:

bash
Copy code
sudo mkdir -p /var/www/html/yourapp
sudo chown -R $USER:$USER /var/www/html/yourapp
cd /var/www/html/yourapp
Install Dependencies:

bash
Copy code
composer install
npm install
npm run build  # This builds the Vue application for production
Set Permissions: Laravel requires specific write permissions for certain directories.

bash
Copy code
sudo chown -R apache:apache /var/www/html/yourapp
sudo chmod -R 775 /var/www/html/yourapp/storage
sudo chmod -R 775 /var/www/html/yourapp/bootstrap/cache
3. Configure the Environment
Update your .env file with production configurations, including database and app URL settings.

Generate Application Key:
bash
Copy code
php artisan key:generate
4. Configure Apache for Laravel and Vue Router
Create a virtual host file for your application:

Create the Virtual Host Configuration:

bash
Copy code
sudo nano /etc/httpd/conf.d/yourapp.conf
Add Configuration:

apache
Copy code
<VirtualHost *:80>
    ServerName yourdomain.com
    DocumentRoot /var/www/html/yourapp/public

    <Directory /var/www/html/yourapp>
        AllowOverride All
        Require all granted
    </Directory>

    ErrorLog ${APACHE_LOG_DIR}/error.log
    CustomLog ${APACHE_LOG_DIR}/access.log combined
</VirtualHost>
Enable Rewrite Module: Ensure that Apache’s rewrite module is enabled.

bash
Copy code
sudo a2enmod rewrite
Update .htaccess for Vue Router: Laravel’s .htaccess file in the public directory should handle Vue Router’s single-page application routing.

Ensure the following configuration is in public/.htaccess:

apache
Copy code
<IfModule mod_rewrite.c>
    RewriteEngine On
    RewriteBase /

    # Handle Authorization Header
    RewriteCond %{HTTP:Authorization} .
    RewriteRule .* - [E=HTTP_AUTHORIZATION:%{HTTP:Authorization}]

    # Redirect Trailing Slashes If Not A Folder...
    RewriteCond %{REQUEST_FILENAME} !-d
    RewriteCond %{REQUEST_URI} (.+)/$
    RewriteRule ^ %1 [L,R=301]

    # Send Requests To Front Controller...
    RewriteCond %{REQUEST_FILENAME} !-f
    RewriteCond %{REQUEST_FILENAME} !-d
    RewriteRule ^ index.php [L]
</IfModule>
Restart Apache:

bash
Copy code
sudo systemctl restart httpd
5. Verify the Application
Access your application at http://yourdomain.com.
Confirm that Laravel routes and Vue Router navigation are working as expected.
Your
